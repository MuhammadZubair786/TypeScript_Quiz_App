{"version":3,"sources":["assets/quiz.png","assets/mil1.png","assets/q1.png","Components/Question_Card.tsx","Services/quiz_service.tsx","Components/Result_Page.tsx","Components/Submit_Form.tsx","Components/Main_Page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["QuestionCard","question","options","callback","answer","questionno","score","useState","selectedAns","setSelectedAns","handleSelection","ev","target","value","className","style","marginTop","opacity","clear","src","img1","id","width","alt","textAlign","paddingTop","img2","marginLeft","marginRight","border","borderRadius","backgroundColor","paddingLeft","paddingRight","color","onSubmit","e","paddingBottom","map","opt","ind","display","type","name","required","checked","onChange","Button","variant","background","margin","getQuizDetails","totalQuestions","level","a","fetch","res","json","results","quiz","questionObj","correct_answer","option","array","incorrect_answers","concat","sort","Math","random","Resultpage","username","quizlength","home","sethome","boxShadow","fontSize","fontFamily","onClick","SubmitForms","selectquestion","selectoption","setQuiz","currentstate","setcurrent","setscore","showResult","setShowResult","useEffect","questions","fetchData","console","log","length","userans","preventDefault","currentans","Spinner","animation","Main_Page","setname","selectedOption","setselectedOption","selectedquestion","setselectedquestion","submitform","setsubmit","q1","borderBottom","height","label","placeholder","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.767bc64c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/quiz.17b5cef4.png\";","export default __webpack_public_path__ + \"static/media/mil1.6f7bf490.png\";","export default __webpack_public_path__ + \"static/media/q1.98453544.png\";","import React, { useState } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport './data.css'\r\nimport img1 from '../assets/quiz.png'\r\nimport img2 from '../assets/mil1.png'\r\n\r\n\r\ntype QuestionType = {\r\n    question: string\r\n    options: string[]\r\n    answer: string\r\n    callback: (e: React.FormEvent<EventTarget>, ans: string) => void\r\n    questionno: any\r\n    score: any\r\n}\r\n\r\nexport const QuestionCard: React.FC<QuestionType> = ({ question, options, answer, callback, questionno, score }) => {\r\n    // console.log(question,options,answer)\r\n\r\n    let [selectedAns, setSelectedAns] = useState(\"\");\r\n   \r\n    const handleSelection = (ev: any) => {\r\n\r\n        setSelectedAns(ev.target.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container\" style={{ marginTop: \"30px\", opacity: 0.9, clear: 'both' }} >\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-1 col-md-1 col-sm-1 col-1\" >\r\n                    <img src={img1} id=\"alice\" width='150px' alt=\"Img1\" />\r\n                </div>\r\n                <div className=\"col col-lg-8 col-md-10  col-sm-10 col-10\" style={{textAlign:'center',paddingTop:'30px'}} >\r\n                    <img src={img2} id=\"data\" width='200px' alt=\"Img2\" />\r\n                </div>\r\n                <div className=\"col col-lg-1 col-md-1  col-sm-1 col-1\" >\r\n                    <img src={img1} id=\"alice\" width='150px' alt=\"Img3\" />\r\n                </div>\r\n            </div>\r\n                <div className=\"row\" >\r\n                    <div className=\"col-lg-2\"></div>\r\n                    <div className=\"col col-lg-8\" >\r\n                        <div style={{ width: '150px', marginLeft: 'auto', marginRight: 'auto', marginTop: '20px' }}>\r\n                            <b style={{ border: '4px solid white', borderRadius: '20px', backgroundColor: 'white', paddingLeft: '10px', paddingRight: '10px' }}>Score : {score}</b>\r\n                        </div>\r\n                        <br />   <b style={{ border: '4px solid white', borderRadius: '20px', backgroundColor: 'white  ', marginTop: '40px' }}>Question No : {questionno + 1}</b>\r\n\r\n\r\n                        <br />\r\n\r\n                        <h3 style={{ border: '4px solid white', color: 'white', borderRadius: '20px', backgroundColor: '#4C44EC  ', paddingLeft: '20px' }}>{question}</h3>\r\n\r\n                    </div>\r\n                    <div className=\"col-lg-2\"></div>\r\n\r\n                </div>\r\n\r\n\r\n                <form onSubmit={(e) => callback(e, selectedAns)} style={{ paddingBottom: '40px' }}>\r\n                    {\r\n\r\n                        options.map((opt: string, ind: number) => {\r\n                            return (\r\n\r\n                                <div key={ind} style={{ width: '65%', marginLeft: 'auto', marginRight: 'auto' }}>\r\n\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-3\" style={{ textAlign: 'right', marginTop: '10px', display: 'inline' }}>\r\n                                                {/* <b style={{backgroundColor:'white',fontSize:'25px',border:'2px solid #4C44EC',borderRadius:'10px'}}>&nbsp;{++ind}&nbsp;</b> */}\r\n                                            </div>\r\n                                            <div className=\"col-lg-5\" style={{ backgroundColor: '#4C44EC', color: 'white', display: 'inline', marginLeft: '-15px', paddingTop: '10px', border: '1px solid red', marginTop: '3px', borderRadius: '10px' }}>\r\n                                                <div className=\"radio\" style={{ display: 'inline' }} > <label className=\"radio\"  >\r\n\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        name=\"opt\"\r\n                                                        required\r\n                                                        value={opt}\r\n                                                        checked={selectedAns === opt}\r\n                                                        onChange={handleSelection}\r\n\r\n                                                    />\r\n                                                    <b className=\"opt\"> {opt}</b>\r\n                                                </label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-4\">\r\n\r\n                        </div>\r\n                        <div className=\"col-lg-6\" style={{ marginTop: '20px' }}>\r\n                            <Button type=\"submit\" variant=\"success\" style={{ background: \"linear-gradient(45deg,white,pink,white)\", color: 'black', width: '30%', margin: '20px 10%', border: '2px solid red', borderRadius: '10px' }}>\r\n                                <b>Submit</b></Button>\r\n                            {/* <input type=\"submit\" style={{display:'block',width:'100%'}}/> */}\r\n                        </div>\r\n                        <div className=\"col col-lg-4\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n\r\n}","import { QuestionType, QuizType } from '../Type/quiz_type';\r\n\r\nconst shuffleArray = (array: any[]) =>\r\n    [...array].sort(() => Math.random() - 0.5)\r\n\r\nexport const getQuizDetails = async (totalQuestions: number, level: string): Promise<QuizType[]> => {\r\n    const res = await fetch(`https://opentdb.com/api.php?amount=${totalQuestions}&difficulty=${level}&type=multiple`);\r\n    let { results } = await res.json();\r\n    const quiz: QuizType[] = results.map((questionObj: QuestionType) => {\r\n        return {\r\n            question: questionObj.question,\r\n            answer: questionObj.correct_answer,\r\n            correct_answer: questionObj.correct_answer,\r\n            option: shuffleArray(questionObj.incorrect_answers.concat(questionObj.correct_answer))\r\n        }\r\n    })\r\n   \r\n    return quiz;\r\n}","import React, { useState } from 'react'\r\nimport './data.css'\r\nimport img1 from '../assets/quiz.png'\r\nimport img2 from '../assets/mil1.png'\r\nimport {Button} from 'react-bootstrap'\r\nimport App from '../App'\r\n\r\ntype result = {\r\n    username: string\r\n    score: number\r\n    quizlength: number\r\n}\r\n\r\nconst Resultpage: React.FC<result> = ({ username, score, quizlength }) => {\r\n   \r\n    const [home,sethome] = useState(false)\r\n\r\n    const Restart=()=>{\r\n        sethome(true)\r\n    }\r\n\r\n    if(home){\r\n        return (\r\n            <App />\r\n        )\r\n    }\r\n   \r\n    return (\r\n\r\n        <div className=\"container\" style={{ marginTop: \"30px\", opacity: 0.9, clear: 'both' }} >\r\n           <div className=\"row\">\r\n                <div className=\"col col-lg-1 col-md-1 col-sm-1 col-1\" >\r\n                    <img src={img1} id=\"alice\" width='150px' alt=\"Img1\" />\r\n                </div>\r\n                <div className=\"col col-lg-8 col-md-10  col-sm-10 col-10\" style={{textAlign:'center',paddingTop:'30px'}} >\r\n                    <img src={img2} id=\"data\" width='200px' alt=\"Img2\" />\r\n                </div>\r\n                <div className=\"col col-lg-1 col-md-1  col-sm-1 col-1\" >\r\n                    <img src={img1} id=\"alice\" width='150px' alt=\"Img3\" />\r\n                </div>\r\n            </div>\r\n        \r\n        <div className=\"row\">\r\n            <div className=\"col col-lg-3 col-md-0 col-0 col-sm-0\"></div>\r\n            <div className=\"col col-lg-6 col-md-12 col-sm-12 col-12\" style={{backgroundColor:'#1D15CB',boxShadow:'10px 20px 10px white',textAlign:'center',marginTop:'60px',paddingTop:'20px',color:'white',borderRadius:'40px'}}>\r\n            <h3 style={{fontSize:'30px',fontFamily:'sans-serif'}}>Result</h3>\r\n            <p style={{fontSize:'25px',fontFamily:'sans-serif'}}>Your Final Score Is {score} Out Of {quizlength}</p>\r\n\r\n            </div>\r\n            <div className=\"col col-lg-3 col-md-0 col-sm-0 col-0\"></div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col col-lg-3 \">\r\n\r\n            </div>\r\n            <div className=\"col col-lg-6 col-md-12 col-sm-12 col-12\" style={{textAlign:'center'}}>\r\n            <Button type=\"button\" variant=\"success\" style={{ background: \"linear-gradient(45deg,white,pink,white)\", color: 'black', width: '30%', margin: '20px 10%', border: '2px solid red', borderRadius: '10px' }}\r\n            onClick={()=>{Restart()}}\r\n            >\r\n                                <b>Restart</b></Button>\r\n               \r\n\r\n            </div>\r\n            <div className=\"col col-lg-3\">\r\n\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resultpage","import React, { useEffect, useState } from 'react';\r\nimport { userdata } from '../Type/quiz_type';\r\nimport { QuestionCard } from '../Components/Question_Card';\r\nimport  {getQuizDetails} from  '../Services/quiz_service'\r\nimport {QuizType} from '../Type/quiz_type'\r\nimport Resultpage from './Result_Page'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst  SubmitForms:React.FC<userdata>=({username,selectoption,selectquestion})=> {\r\n\r\n  let [quiz, setQuiz] = useState<QuizType[]>([])\r\n  let [currentstate,setcurrent] = useState(0)\r\n  let [score,setscore] = useState(0)\r\n  let [showResult,setShowResult] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const questions: QuizType[] = await getQuizDetails(selectquestion, 'easy');\r\n      setQuiz(questions)\r\n    }\r\n    fetchData();\r\n  }, [selectquestion])\r\n  console.log(\"Quiz :\",quiz)\r\n\r\n  const handleSubmit  = (e:React.FormEvent<EventTarget>,userans:string) =>{\r\n    e.preventDefault();\r\n    \r\n    const currentans:QuizType = quiz[currentstate]\r\n\r\n    console.log(\"correct answer : \",currentans.answer,\"User Selection :\",userans )\r\n\r\n    if(userans === currentans.answer){\r\n     setscore (++score)\r\n     console.log(score)\r\n    }\r\n    \r\n    if(currentstate !== quiz.length-1){\r\n    setcurrent(++currentstate)\r\n    }\r\n    else{\r\n      setShowResult(true)  \r\n    }\r\n  }\r\n\r\n\r\n  if(showResult){\r\n    console.log(username)\r\n    return(   \r\n        <>\r\n        <Resultpage username={username} score={score} quizlength={quiz.length}  />\r\n        </>   \r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  if(!quiz.length){\r\n    return(\r\n     <div style={{textAlign:'center',marginTop:'20%'}}>\r\n      <Spinner animation=\"grow\" variant=\"primary\" />\r\n  <Spinner animation=\"grow\" variant=\"secondary\" />\r\n  <Spinner animation=\"grow\" variant=\"success\" />\r\n  <Spinner animation=\"grow\" variant=\"danger\" />\r\n  <Spinner animation=\"grow\" variant=\"warning\" />\r\n     </div>\r\n    )\r\n  }\r\n  else{\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <QuestionCard\r\n      question = {quiz[currentstate].question}\r\n      options = {quiz[currentstate].option}\r\n      answer = {quiz[currentstate].answer}\r\n      callback = {handleSubmit}\r\n      questionno = {currentstate}\r\n      score = {score}\r\n    />\r\n     \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\n}\r\nexport default SubmitForms;\r\n","import React, { useState } from 'react'\r\nimport './data.css'\r\nimport img1 from '../assets/quiz.png'\r\nimport img2 from '../assets/mil1.png'\r\nimport q1 from '../assets/q1.png'\r\nimport { Button } from 'react-bootstrap';\r\nimport SubmitForms from '../Components/Submit_Form'\r\n\r\nconst Main_Page = () => {\r\n\r\n    let [name, setname] = useState('')\r\n\r\n    let [selectedOption, setselectedOption] = useState('')\r\n\r\n    let [selectedquestion, setselectedquestion] = useState(0)\r\n\r\n    let [submitform, setsubmit] = useState(false)\r\n\r\n    const ChangeSelectValue = (e: any) => {\r\n        setselectedOption(e.target.value);\r\n    }\r\n\r\n    const selectedquestionChange = (e: any) => {\r\n        setselectedquestion(e.target.value)\r\n    }\r\n\r\n    const getdata = () => {\r\n        if (name === \"\") {\r\n            alert(\"Plz Enter Your Name\")\r\n        }\r\n        else if (selectedOption === '') {\r\n            alert(\"Select Difficult Level\")\r\n        }\r\n        else if (selectedquestion === 0) {\r\n            alert(\"Select Questions\")\r\n        }\r\n\r\n        else {\r\n            setsubmit(true)\r\n        }\r\n    }\r\n\r\n    if (submitform) {\r\n        return (\r\n            <div>\r\n                <SubmitForms username={name} selectoption={selectedOption} selectquestion={selectedquestion} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-1 col-md-1 col-sm-1 col-1\" >\r\n                    <img src={img1} id=\"alice\" width='150px' alt=\"Img1\" />\r\n                </div>\r\n                <div className=\"col col-lg-8 col-md-10  col-sm-10 col-10\" style={{textAlign:'center',paddingTop:'30px'}} >\r\n                    <img src={img2} id=\"data\" width='200px' alt=\"Img2\" />\r\n                </div>\r\n                <div className=\"col col-lg-1 col-md-1  col-sm-1 col-1\" >\r\n                    <img src={img1} id=\"alice\" width='150px' alt=\"Img3\" />\r\n                </div>\r\n            </div>\r\n           <div className=\"row\">\r\n               <div className=\"col col-lg-12 col-md-12 col-sm-12 col-12\" style={{textAlign:'center'}}>\r\n                   <img src={q1} width=\"200px\" style={{marginLeft:'10%'}} alt=\"Quiz Logo\"/>\r\n               </div>\r\n           </div>\r\n\r\n            <form >\r\n\r\n                <div className=\"row\" style={{ textAlign: 'center' }} >\r\n                    <div className=\"col col-lg-3 col-md-1 col-sm-3 col-3\" >\r\n\r\n                    </div>\r\n                    <div className=\"col col-lg-6 col-md-10 col-sm-12 col-12\" style={{ paddingTop: '30px', backgroundColor: '#3248EC ',boxShadow:'20px 20px 20px white ' }}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12 col-md-12 col-sm-12 col-12\" style={{ borderBottom: '0px solid grey', backgroundColor: '#3248EC ' }}>\r\n                                <label  style={{color:'white'}}><b>Enter Your Name&emsp;&emsp;:&emsp;&emsp;</b></label>\r\n                                <input type=\"text\" required value={name} onChange={(e) => setname(e.target.value)} style={{ border: '1px solid grey', height: '40px', width: '300px' }} />\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col col-lg-3 col-md-3 col-sm-3 col-3\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" style={{ textAlign: 'center' }}>\r\n                    <div className=\"col col-lg-3 col-md-1 col-sm-12 col-12\"></div>\r\n                    <div className=\"col col-lg-6 col-md-10 col-sm-12 col-12\" style={{ borderBottom: '0px solid grey', backgroundColor: '#3248EC ',boxShadow:'20px 20px 20px white ' }}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12 col-md-12 col-sm-12 col-12\" style={{ paddingTop: '20px', }}>\r\n\r\n                                <label  style={{color:'white'}}><b>Select Level &nbsp;&nbsp;&emsp;&emsp;&emsp;:&emsp;&emsp;</b></label>\r\n                                <select name=\"Difficult\" style={{ width: '300px', height: '40px', marginRight: '-20px' }}\r\n                                    value={selectedOption}\r\n                                    onChange={ChangeSelectValue}\r\n                                >\r\n\r\n\r\n                                    <optgroup label=\"Select Level\"></optgroup>\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"easy\">Easy</option>\r\n                                    <option value=\"Medium\">Medium</option>\r\n                                    <option value=\"Difficult\">Difficult</option>\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col col-lg-3 col-md-1 col-sm-12 col-12\"></div>\r\n                </div>\r\n\r\n                <div className=\"row\" style={{ textAlign: 'center' }}>\r\n                    <div className=\"col col-lg-3 col-md-1 col-sm-12 col-12\"></div>\r\n                    <div className=\"col col-lg-6 col-md-10 col-sm-12 col-12\" style={{ borderBottom: '0px solid grey', backgroundColor: '#3248EC ',boxShadow:'20px 20px 20px white ' }}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12 col-md-12 col-sm-12 col-12\" style={{ paddingTop: '20px', }}>\r\n\r\n                                <label  style={{color:'white'}}><b>Select Question &emsp;&emsp;&emsp;:&emsp;&emsp;</b></label>\r\n                                <select name=\"Amount\" style={{ width: '300px', height: '40px' }}\r\n                                    placeholder=\"Select\"\r\n                                    value={selectedquestion}\r\n                                    onChange={selectedquestionChange}\r\n\r\n                                >\r\n\r\n                                    <optgroup label=\"Select Question\"></optgroup>\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"15\">15</option>\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col col-lg-3 col-md-1 col-sm-12 col-12\"></div>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col col-lg-3 col-md-1 col-sm-12 col-12\"></div>\r\n                    <div className=\"col col-lg-6 col-md-10 col-sm-12 col-12\" style={{\r\n                        textAlign: 'center', paddingTop: '20px',\r\n                        paddingBottom: '40px'\r\n                        , backgroundColor: '#3248EC '\r\n                        ,boxShadow:'20px 20px 20px white '\r\n                        \r\n                    }} >\r\n                        <Button type=\"button\" variant=\"success\"\r\n                            onClick={() => { getdata() }}\r\n\r\n                            style={{\r\n                                background: \"linear-gradient(45deg,blue,white,blue)\",\r\n                                color: 'black',\r\n                                width: '200px',\r\n                                border: '2px solid red', borderRadius: '10px'\r\n                            }}>\r\n                            <b >Submit</b></Button>\r\n\r\n                    </div>\r\n                    <div className=\"col col-lg-3 col-md-3 col-sm-3 col-3\"></div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Main_Page;","import React from 'react';\nimport './App.css';\n\n// import { QuestionCard } from './Components/Question_Card';\n// import  {getQuizDetails} from  './Services/quiz_service'\n\n// import {QuizType} from './Type/quiz_type'\n\nimport Main_Page from './Components/Main_Page'\nfunction App() {\n\n  // let [quiz, setQuiz] = useState<QuizType[]>([])\n  // let [currentstate,setcurrent] = useState(0)\n  // let [score,setscore] = useState(0)\n  // let [showResult,setShowResult] = useState(false)\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     // const questions: QuizType[] = await getQuizDetails(5, 'easy');\n  //     // setQuiz(questions)\n  //   }\n  //   fetchData();\n  // }, []);\n  // console.log(\"Quiz :\",quiz)\n\n  // const handleSubmit  = (e:React.FormEvent<EventTarget>,userans:string) =>{\n  //   e.preventDefault();\n  //   // console.log(userans)\n\n  //   const currentans:QuizType = quiz[currentstate]\n\n  //   console.log(\"correct answer : \",currentans.answer,\"User Selection :\",userans )\n\n  //   if(userans == currentans.answer){\n  //    setscore (++score)\n  //    console.log(score)\n  //   }\n    \n  //   if(currentstate !== quiz.length-1){\n  //   setcurrent(++currentstate)\n  //   }\n  //   else{\n  //     setShowResult(true)\n  //     // alert(\"Your Final Score Is \"+score+\"Out Of \"+quiz.length)\n  //     // console.log(score)\n  //     // setcurrent(0)\n  //     // setscore(0)\n    \n  //   }\n  // }\n\n\n  // if(showResult){\n  //   return(\n  //     <div>\n  //       <Main_Page/>\n  //     {/* <h3>Result</h3>\n  //     <p>\"Your Final Score Is ${score}\"Out Of \"{quiz.length}</p> */}\n  //     </div>\n  //   )\n  // }\n\n\n\n\n  // if(!quiz.length){\n  //   return(\n  //     <h1>Loading.....</h1>\n  //   )\n  // }\n  // else{\n\n  return (\n    <div className=\"App\">\n    \n      {/* <QuestionCard\n      question = {quiz[currentstate].question}\n      options = {quiz[currentstate].option}\n      answer = {quiz[currentstate].answer}\n      callback = {handleSubmit}\n      questionno = {currentstate}\n      score = {score}\n     \n\n      /> */}\n      <Main_Page />\n     \n    </div>\n  );\n}\n\n// }\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}